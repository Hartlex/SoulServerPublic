using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SunCommon.Entities.Item
{
    public class SunItem
    {
        public uint itemId;
        public int chargeType;
        public int chargeSubType;
        public string name;
        public int nameCode;
        public int nameColorType;
        public string nameColorCode;
        public int nameCode2;
        public int dnCode3;
        public int wearImageCode;
        public int InvenImageCode;
        public int DropImageCode;
        public int Type;
        public int eType;
        public int itemSoundIndex;
        public int effectPosition;
        public string effectCode;
        public int RotBone;
        public string BoneName;
        public int SaBoneType;
        public int SubType;
        public int SetOptionType;
        public int SetType;
        public int Level;
        public int Durability;
        public float duraStrength;
        public int strengthPenaltiyIndex;
        public long ItemSellMoney;
        public long ItemSellMoneyMax;
        public int Popup;
        public int MaterialType;
        public int TradeSellType;
        public int Mixture; //Stacksize
        public int ReversionType;
        public int ExtractType;
        public int LimitEqLevel;
        public int LimitUseLevel;
        public int LimitStr;
        public int LimitDex;
        public int LimitVit;
        public int LimitInt;
        public int LimitSpi;
        public int LimitSkill1;
        public int LimitSkill2;

        public AttackDeffInfo ADInfo;
        //public int MinDamage;
        //public int MaxDamage;
        public int PhyAttRate;
        public int PhyAttSpeed;
        //public int PhyDef;
        public int PhyAvoid;
        public int BaseAttType;
        public int MagicalAttType;
        public int MeleeType;
        public Single AttackRange;
        public int ArmorType;
        //public int MagicAttackMinDamage;
        //public int MagicAttackMaxDamage;
        public int MagicAttackSpeed;
        //public int MagicDef;
        public int Speed;
        public int EqRidingClass;
        public int EqClass1;
        public int EqClass2;
        public int EqClass3;
        public int EqClass4;
        public int EqClass5;
        public int EqPosition;
        public int MaxRank;
        public int SocketUse;
        public int SocketNum;
        public ExerciseEffect[] exerciseEffects = new ExerciseEffect[5];
        public ExerciseEffect[] pcExerciseEffects = new ExerciseEffect[5];
        public int missile;
        public int headType;
        public int customize;
        public int dupNumber;
        public int dupEquipNumber;
        public int dupEquipType;
        public int dubEquipGroup;
        public int dubEquipGroupNumb;
        public int wasteItem;
        public int coolTimeType;
        public int healHp;
        public int ExpHp;
        public int healTime;
        public int times;
        public int coolTime;
        public int ChaosTimeDec;
        public int QuestCode;
        public int MaterialCode;
        public int SkillCode;
        public int ExchangedItem;
        public int divLimitStr;
        public int divLimitDex;
        public int divLimitVit;
        public int divLimitInt;
        public int divLimitSpi;
        public int divLimitSkill1;
        public int divLimitSkill2;
        public AttackDeffInfo DevineADInfo;
        public int ACCode;
        public int ACReferenceID;
        public AttackDeffInfo EliteADInfo;
        public AttackDeffInfo UniqueADInfo;
        public int ItemListType;
        public int UseItemDistribution;


        public SunItem(string[] sl)
        {
            
            itemId = UInt16.Parse(sl[0]);
            chargeType = Int32.Parse(sl[1]);
            chargeSubType = Int32.Parse(sl[2]);
            name = sl[3];
            nameCode = Int32.Parse(sl[4]);
            nameColorType = Int32.Parse(sl[5]);
            nameColorCode = sl[6];
            nameCode2 = Int32.Parse(sl[7]);
            dnCode3 = Int32.Parse(sl[8]);
            wearImageCode = Int32.Parse(sl[9]);
            InvenImageCode = Int32.Parse(sl[10]);
            DropImageCode = Int32.Parse(sl[11]);
            Type = Int32.Parse(sl[12]);
            eType = Int32.Parse(sl[13]);
            itemSoundIndex = Int32.Parse(sl[14]);
            effectPosition = Int32.Parse(sl[15]);
            effectCode = sl[16];
            RotBone = Int32.Parse(sl[17]);
            BoneName = sl[18];
            SaBoneType = Int32.Parse(sl[19]);
            SubType = Int32.Parse(sl[20]);
            SetOptionType = Int32.Parse(sl[21]);
            SetType = Int32.Parse(sl[22]);
            Level = Int32.Parse(sl[23]);
            Durability = Int32.Parse(sl[24]);
            duraStrength = Single.Parse(sl[25]);
            strengthPenaltiyIndex = Int32.Parse(sl[26]);
            ItemSellMoney = (Int64)Single.Parse(sl[27]);
            ItemSellMoneyMax = (Int64) Single.Parse(sl[28]);
            Popup = Int32.Parse(sl[29]);
            MaterialType = Int32.Parse(sl[30]);
            TradeSellType = Int32.Parse(sl[30+1]);
            Mixture = Int32.Parse(sl[31 + 1]);
            ReversionType = Int32.Parse(sl[32 + 1]);
            ExtractType = Int32.Parse(sl[33 + 1]);
            LimitEqLevel = Int32.Parse(sl[34 + 1]);
            LimitUseLevel = Int32.Parse(sl[35 + 1]);
            LimitStr = (int)Single.Parse(sl[36 + 1]);
            LimitDex = (int)Single.Parse(sl[37 + 1]);
            LimitVit = (int)Single.Parse(sl[38 + 1]);
            LimitInt = (int)Single.Parse(sl[39 + 1]);
            LimitSpi = (int)Single.Parse(sl[40 + 1]);
            LimitSkill1 = (int)Single.Parse(sl[41 + 1]);
            LimitSkill2 = (int)Single.Parse(sl[42 + 1]);
            ADInfo = new AttackDeffInfo();
            ADInfo.phyMinDmg = Single.Parse(sl[43 + 1]);
            ADInfo.phyMaxDmg = Single.Parse(sl[44 + 1]);
            PhyAttRate = Int32.Parse(sl[45 + 1]);
            PhyAttSpeed = Int32.Parse(sl[46 + 1]);
            ADInfo.phyDef = Single.Parse(sl[47 + 1]);
            PhyAvoid = Int32.Parse(sl[48 + 1]);
            BaseAttType = Int32.Parse(sl[49 + 1]);
            MagicalAttType = Int32.Parse(sl[50 + 1]);
            MeleeType = Int32.Parse(sl[52]);
            AttackRange = Single.Parse(sl[53]);
            ArmorType = Int32.Parse(sl[54]);
            ADInfo.magMinDmg = Single.Parse(sl[55]);
            ADInfo.magMaxDmg = Single.Parse(sl[56 ]);
            MagicAttackSpeed = Int32.Parse(sl[57 ]);
            ADInfo.magDef = Single.Parse(sl[58 ]);
            Speed = Int32.Parse(sl[59 ]);
            EqRidingClass = Int32.Parse(sl[60 ]);
            EqClass1 = Int32.Parse(sl[61 ]);
            EqClass2 = Int32.Parse(sl[62 ]);
            EqClass3 = Int32.Parse(sl[63 ]);
            EqClass4 = Int32.Parse(sl[64 ]);
            EqClass5 = Int32.Parse(sl[65 ]);
            EqPosition = Int32.Parse(sl[66 ]);
            MaxRank = Int32.Parse(sl[67 ]);
            SocketUse = Int32.Parse(sl[68 ]);
            SocketNum = Int32.Parse(sl[69 ]);
            exerciseEffects[0] = new ExerciseEffect(sl[70 ], sl[71 ], sl[72 ], sl[73 ]);
            exerciseEffects[1] = new ExerciseEffect(sl[74 ], sl[75 ], sl[76 ], sl[77 ]);
            exerciseEffects[2] = new ExerciseEffect(sl[78 ], sl[79 ], sl[80 ], sl[81 ]);
            exerciseEffects[3] = new ExerciseEffect(sl[82 ], sl[83 ], sl[84 ], sl[85 ]);
            exerciseEffects[4] = new ExerciseEffect(sl[86 ], sl[87 ], sl[88 ], sl[89 ]);
            pcExerciseEffects[0] = new ExerciseEffect(sl[90 ], sl[91 ], sl[92 ], sl[93 ]);
            pcExerciseEffects[1] = new ExerciseEffect(sl[94 ], sl[95 ], sl[96 ], sl[97 ]);
            pcExerciseEffects[2] = new ExerciseEffect(sl[98 ], sl[99 ], sl[100 ], sl[101 ]);
            pcExerciseEffects[3] = new ExerciseEffect(sl[102 ], sl[103 ], sl[104 ], sl[105 ]);
            pcExerciseEffects[4] = new ExerciseEffect(sl[106 ], sl[107 ], sl[108 ], sl[109 ]);
            missile = Int32.Parse(sl[110 ]);
            headType = Int32.Parse(sl[111 ]);
            customize = Int32.Parse(sl[112 ]);
            dupNumber = Int32.Parse(sl[113 ]);
            dupEquipNumber = Int32.Parse(sl[114 ]);
            dupEquipType = Int32.Parse(sl[115 ]);
            dubEquipGroup = Int32.Parse(sl[116 ]);
            dubEquipGroupNumb = Int32.Parse(sl[117 ]);
            wasteItem = Int32.Parse(sl[118 ]);
            coolTimeType = Int32.Parse(sl[119 ]);
            healHp = Int32.Parse(sl[120 ]);
            ExpHp = Int32.Parse(sl[121 ]);
            healTime = Int32.Parse(sl[122 ]);
            times = Int32.Parse(sl[123 ]);
            coolTime = Int32.Parse(sl[124 ]);
            ChaosTimeDec = Int32.Parse(sl[125 ]);
            QuestCode = Int32.Parse(sl[126 ]);
            MaterialCode = Int32.Parse(sl[127 ]);
            SkillCode = Int32.Parse(sl[128 ]);
            ExchangedItem = Int32.Parse(sl[129 ]);
            divLimitStr = (int)Single.Parse(sl[130 ]);
            divLimitDex = (int)Single.Parse(sl[131 ]);
            divLimitVit = (int)Single.Parse(sl[132 ]);
            divLimitInt = (int)Single.Parse(sl[133 ]);
            divLimitSpi = (int)Single.Parse(sl[134 ]);
            divLimitSkill1 = (int)Single.Parse(sl[135 ]);
            divLimitSkill2 = (int)Single.Parse(sl[136 ]);
            DevineADInfo = new AttackDeffInfo(sl[137 ], sl[138 ], sl[139 ], sl[140 ], sl[141 ], sl[142 ]);
            ACCode= Int32.Parse(sl[143 ]);
            ACReferenceID = Int32.Parse(sl[144 ]);
            EliteADInfo = new AttackDeffInfo(sl[145 ], sl[146 ], sl[147 ], sl[148 ], sl[149 ], sl[150 ]);
            UniqueADInfo = new AttackDeffInfo(sl[151 ], sl[152 ], sl[153 ], sl[154 ], sl[155 ], sl[156 ]);
            ItemListType = Int32.Parse(sl[157 ]);
            UseItemDistribution = Int32.Parse(sl[158 ]);

        }
    }
}
